{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Documents\\\\IBA\\\\webdev\\\\sporgeskema-system\\\\client\\\\src\\\\components\\\\AdminDashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport './AdminDashboard.css';\nconst AdminDashboard = () => {\n  const [responses, setResponses] = useState([]);\n  const [stats, setStats] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [file, setFile] = useState(null);\n  const [uploadError, setUploadError] = useState('');\n  const [uploadSuccess, setUploadSuccess] = useState('');\n  // Add sorting state\n  const [sortField, setSortField] = useState('startTime');\n  const [sortDirection, setSortDirection] = useState('desc');\n  const history = useHistory();\n  useEffect(() => {\n    const token = localStorage.getItem('adminToken');\n    if (!token) {\n      history.push('/admin/login');\n      return;\n    }\n    const fetchData = async () => {\n      try {\n        const config = {\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        };\n        const [responsesRes, statsRes] = await Promise.all([axios.get('/api/admin/responses', config), axios.get('/api/admin/stats', config)]);\n        setResponses(responsesRes.data);\n        setStats(statsRes.data);\n      } catch (err) {\n        var _err$response;\n        if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n          localStorage.removeItem('adminToken');\n          history.push('/admin/login');\n        } else {\n          setError('Error fetching data. Please try again later.');\n        }\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [history]);\n\n  // Sort responses function\n  const getSortedResponses = () => {\n    if (!responses || responses.length === 0) return [];\n    return [...responses].sort((a, b) => {\n      let comparison = 0;\n      switch (sortField) {\n        case 'id':\n          comparison = a.id.localeCompare(b.id);\n          break;\n        case 'startTime':\n          comparison = new Date(a.startTime) - new Date(b.startTime);\n          break;\n        case 'answersCount':\n          comparison = a.answersCount - b.answersCount;\n          break;\n        default:\n          comparison = 0;\n      }\n      return sortDirection === 'asc' ? comparison : -comparison;\n    });\n  };\n\n  // Handle sort click\n  const handleSort = field => {\n    if (field === sortField) {\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\n    } else {\n      setSortField(field);\n      setSortDirection('asc');\n    }\n  };\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setUploadError('');\n    setUploadSuccess('');\n  };\n  const handleUpload = async e => {\n    e.preventDefault();\n    if (!file) {\n      setUploadError('Please select a file to upload');\n      return;\n    }\n    const formData = new FormData();\n    formData.append('file', file);\n    try {\n      const token = localStorage.getItem('adminToken');\n      await axios.post('/api/admin/upload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      setUploadSuccess('Survey file uploaded successfully');\n      setFile(null);\n      document.getElementById('survey-file').value = '';\n    } catch (err) {\n      var _err$response2, _err$response2$data;\n      setUploadError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.error) || 'Error uploading file');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('adminToken');\n    history.push('/admin/login');\n  };\n  const downloadResponse = async id => {\n    try {\n      const token = localStorage.getItem('adminToken');\n\n      // Create a direct link with the token in the header\n      const link = document.createElement('a');\n      link.href = `/api/admin/responses/${id}`;\n      link.download = `response-${id}.json`;\n\n      // Create a click event\n      const clickEvent = new MouseEvent('click', {\n        view: window,\n        bubbles: true,\n        cancelable: true\n      });\n\n      // Fetch the file with proper authorization\n      const response = await fetch(`/api/admin/responses/${id}`, {\n        headers: {\n          'Authorization': `Bearer ${token}`\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Failed to download file');\n      }\n      const blob = await response.blob();\n      const url = window.URL.createObjectURL(blob);\n      link.href = url;\n      link.dispatchEvent(clickEvent);\n\n      // Clean up\n      setTimeout(() => {\n        window.URL.revokeObjectURL(url);\n      }, 100);\n    } catch (err) {\n      console.error('Download error:', err);\n      alert('Error downloading response');\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    return date.toLocaleString('en-GB', {\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n  if (loading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"admin-loading\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loading-spinner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }\n    }, \"Loading dashboard...\"));\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"admin-dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"dashboard-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }\n  }, \"Survey Admin Dashboard\"), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: handleLogout,\n    className: \"logout-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }\n  }, \"Logout\")), error && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, error), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section stats-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 11\n    }\n  }, \"Statistics\"), stats && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stats-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 17\n    }\n  }, stats.totalResponses), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }\n  }, \"Total Responses\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 17\n    }\n  }, stats.totalAnswers), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 17\n    }\n  }, \"Total Answers\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-value\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 17\n    }\n  }, stats.averageAnswersPerResponse.toFixed(2)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"stat-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 17\n    }\n  }, \"Avg. Answers Per Response\")))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section upload-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 224,\n      columnNumber: 11\n    }\n  }, \"Upload Survey\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleUpload,\n    className: \"upload-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-input-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"survey-file\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 15\n    }\n  }, \"XML Survey File\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"file-input-wrapper\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"file\",\n    id: \"survey-file\",\n    accept: \".xml\",\n    onChange: handleFileChange,\n    className: \"file-input\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"file-name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 17\n    }\n  }, file ? file.name : 'No file selected'))), uploadError && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  }, uploadError), uploadSuccess && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"success-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 31\n    }\n  }, uploadSuccess), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"upload-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 13\n    }\n  }, \"Upload\"))), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dashboard-section responses-section\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }, \"Survey Responses\"), responses.length === 0 ? /*#__PURE__*/React.createElement(\"p\", {\n    className: \"no-data-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 13\n    }\n  }, \"No responses yet.\") : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"table-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    className: \"responses-table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    className: \"sortable-header\",\n    onClick: () => handleSort('id'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 21\n    }\n  }, \"ID \", sortField === 'id' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sort-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 25\n    }\n  }, sortDirection === 'asc' ? '▲' : '▼')), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"sortable-header\",\n    onClick: () => handleSort('startTime'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 21\n    }\n  }, \"Date \", sortField === 'startTime' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sort-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 25\n    }\n  }, sortDirection === 'asc' ? '▲' : '▼')), /*#__PURE__*/React.createElement(\"th\", {\n    className: \"sortable-header\",\n    onClick: () => handleSort('answersCount'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 21\n    }\n  }, \"Answers \", sortField === 'answersCount' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"sort-indicator\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 25\n    }\n  }, sortDirection === 'asc' ? '▲' : '▼')), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 21\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 17\n    }\n  }, getSortedResponses().map(response => /*#__PURE__*/React.createElement(\"tr\", {\n    key: response.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    className: \"id-cell\",\n    title: response.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 23\n    }\n  }, response.id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297,\n      columnNumber: 23\n    }\n  }, formatDate(response.startTime)), /*#__PURE__*/React.createElement(\"td\", {\n    className: \"answers-cell\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 23\n    }\n  }, response.answersCount), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => downloadResponse(response.id),\n    className: \"download-button\",\n    title: \"Download response data\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 25\n    }\n  }, \"Download\"))))))))));\n};\nexport default AdminDashboard;","map":{"version":3,"names":["React","useState","useEffect","axios","useHistory","AdminDashboard","responses","setResponses","stats","setStats","loading","setLoading","error","setError","file","setFile","uploadError","setUploadError","uploadSuccess","setUploadSuccess","sortField","setSortField","sortDirection","setSortDirection","history","token","localStorage","getItem","push","fetchData","config","headers","responsesRes","statsRes","Promise","all","get","data","err","_err$response","response","status","removeItem","getSortedResponses","length","sort","a","b","comparison","id","localeCompare","Date","startTime","answersCount","handleSort","field","handleFileChange","e","target","files","handleUpload","preventDefault","formData","FormData","append","post","document","getElementById","value","_err$response2","_err$response2$data","handleLogout","downloadResponse","link","createElement","href","download","clickEvent","MouseEvent","view","window","bubbles","cancelable","fetch","ok","Error","blob","url","URL","createObjectURL","dispatchEvent","setTimeout","revokeObjectURL","console","alert","formatDate","dateString","date","toLocaleString","day","month","year","hour","minute","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onClick","totalResponses","totalAnswers","averageAnswersPerResponse","toFixed","onSubmit","htmlFor","type","accept","onChange","name","map","key","title"],"sources":["Z:/Documents/IBA/webdev/sporgeskema-system/client/src/components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './AdminDashboard.css';\r\n\r\nconst AdminDashboard = () => {\r\n  const [responses, setResponses] = useState([]);\r\n  const [stats, setStats] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState('');\r\n  const [file, setFile] = useState(null);\r\n  const [uploadError, setUploadError] = useState('');\r\n  const [uploadSuccess, setUploadSuccess] = useState('');\r\n  // Add sorting state\r\n  const [sortField, setSortField] = useState('startTime');\r\n  const [sortDirection, setSortDirection] = useState('desc');\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('adminToken');\r\n    if (!token) {\r\n      history.push('/admin/login');\r\n      return;\r\n    }\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Authorization': `Bearer ${token}`\r\n          }\r\n        };\r\n\r\n        const [responsesRes, statsRes] = await Promise.all([\r\n          axios.get('/api/admin/responses', config),\r\n          axios.get('/api/admin/stats', config)\r\n        ]);\r\n\r\n        setResponses(responsesRes.data);\r\n        setStats(statsRes.data);\r\n      } catch (err) {\r\n        if (err.response?.status === 401) {\r\n          localStorage.removeItem('adminToken');\r\n          history.push('/admin/login');\r\n        } else {\r\n          setError('Error fetching data. Please try again later.');\r\n        }\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [history]);\r\n\r\n  // Sort responses function\r\n  const getSortedResponses = () => {\r\n    if (!responses || responses.length === 0) return [];\r\n    \r\n    return [...responses].sort((a, b) => {\r\n      let comparison = 0;\r\n      \r\n      switch(sortField) {\r\n        case 'id':\r\n          comparison = a.id.localeCompare(b.id);\r\n          break;\r\n        case 'startTime':\r\n          comparison = new Date(a.startTime) - new Date(b.startTime);\r\n          break;\r\n        case 'answersCount':\r\n          comparison = a.answersCount - b.answersCount;\r\n          break;\r\n        default:\r\n          comparison = 0;\r\n      }\r\n      \r\n      return sortDirection === 'asc' ? comparison : -comparison;\r\n    });\r\n  };\r\n\r\n  // Handle sort click\r\n  const handleSort = (field) => {\r\n    if (field === sortField) {\r\n      setSortDirection(sortDirection === 'asc' ? 'desc' : 'asc');\r\n    } else {\r\n      setSortField(field);\r\n      setSortDirection('asc');\r\n    }\r\n  };\r\n\r\n  const handleFileChange = (e) => {\r\n    setFile(e.target.files[0]);\r\n    setUploadError('');\r\n    setUploadSuccess('');\r\n  };\r\n\r\n  const handleUpload = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!file) {\r\n      setUploadError('Please select a file to upload');\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append('file', file);\r\n\r\n    try {\r\n      const token = localStorage.getItem('adminToken');\r\n      \r\n      await axios.post('/api/admin/upload', formData, {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data',\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n\r\n      setUploadSuccess('Survey file uploaded successfully');\r\n      setFile(null);\r\n      document.getElementById('survey-file').value = '';\r\n    } catch (err) {\r\n      setUploadError(err.response?.data?.error || 'Error uploading file');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    localStorage.removeItem('adminToken');\r\n    history.push('/admin/login');\r\n  };\r\n\r\n  const downloadResponse = async (id) => {\r\n    try {\r\n      const token = localStorage.getItem('adminToken');\r\n      \r\n      // Create a direct link with the token in the header\r\n      const link = document.createElement('a');\r\n      link.href = `/api/admin/responses/${id}`;\r\n      link.download = `response-${id}.json`;\r\n      \r\n      // Create a click event\r\n      const clickEvent = new MouseEvent('click', {\r\n        view: window,\r\n        bubbles: true,\r\n        cancelable: true\r\n      });\r\n      \r\n      // Fetch the file with proper authorization\r\n      const response = await fetch(`/api/admin/responses/${id}`, {\r\n        headers: {\r\n          'Authorization': `Bearer ${token}`\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error('Failed to download file');\r\n      }\r\n      \r\n      const blob = await response.blob();\r\n      const url = window.URL.createObjectURL(blob);\r\n      link.href = url;\r\n      link.dispatchEvent(clickEvent);\r\n      \r\n      // Clean up\r\n      setTimeout(() => {\r\n        window.URL.revokeObjectURL(url);\r\n      }, 100);\r\n    } catch (err) {\r\n      console.error('Download error:', err);\r\n      alert('Error downloading response');\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString) => {\r\n    const date = new Date(dateString);\r\n    return date.toLocaleString('en-GB', {\r\n      day: '2-digit',\r\n      month: '2-digit',\r\n      year: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"admin-loading\">\r\n        <div className=\"loading-spinner\"></div>\r\n        <p>Loading dashboard...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin-dashboard\">\r\n      <header className=\"dashboard-header\">\r\n        <h1>Survey Admin Dashboard</h1>\r\n        <button onClick={handleLogout} className=\"logout-button\">Logout</button>\r\n      </header>\r\n\r\n      {error && <div className=\"error-message\">{error}</div>}\r\n\r\n      <div className=\"dashboard-content\">\r\n        <section className=\"dashboard-section stats-section\">\r\n          <h2>Statistics</h2>\r\n          {stats && (\r\n            <div className=\"stats-container\">\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.totalResponses}</div>\r\n                <div className=\"stat-label\">Total Responses</div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.totalAnswers}</div>\r\n                <div className=\"stat-label\">Total Answers</div>\r\n              </div>\r\n              <div className=\"stat-card\">\r\n                <div className=\"stat-value\">{stats.averageAnswersPerResponse.toFixed(2)}</div>\r\n                <div className=\"stat-label\">Avg. Answers Per Response</div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </section>\r\n\r\n        <section className=\"dashboard-section upload-section\">\r\n          <h2>Upload Survey</h2>\r\n          <form onSubmit={handleUpload} className=\"upload-form\">\r\n            <div className=\"file-input-container\">\r\n              <label htmlFor=\"survey-file\">XML Survey File</label>\r\n              <div className=\"file-input-wrapper\">\r\n                <input\r\n                  type=\"file\"\r\n                  id=\"survey-file\"\r\n                  accept=\".xml\"\r\n                  onChange={handleFileChange}\r\n                  className=\"file-input\"\r\n                />\r\n                <span className=\"file-name\">{file ? file.name : 'No file selected'}</span>\r\n              </div>\r\n            </div>\r\n            \r\n            {uploadError && <div className=\"error-message\">{uploadError}</div>}\r\n            {uploadSuccess && <div className=\"success-message\">{uploadSuccess}</div>}\r\n            \r\n            <button type=\"submit\" className=\"upload-button\">\r\n              Upload\r\n            </button>\r\n          </form>\r\n        </section>\r\n\r\n        <section className=\"dashboard-section responses-section\">\r\n          <h2>Survey Responses</h2>\r\n          {responses.length === 0 ? (\r\n            <p className=\"no-data-message\">No responses yet.</p>\r\n          ) : (\r\n            <div className=\"table-container\">\r\n              <table className=\"responses-table\">\r\n                <thead>\r\n                  <tr>\r\n                    <th \r\n                      className=\"sortable-header\" \r\n                      onClick={() => handleSort('id')}\r\n                    >\r\n                      ID {sortField === 'id' && (\r\n                        <span className=\"sort-indicator\">\r\n                          {sortDirection === 'asc' ? '▲' : '▼'}\r\n                        </span>\r\n                      )}\r\n                    </th>\r\n                    <th \r\n                      className=\"sortable-header\"\r\n                      onClick={() => handleSort('startTime')}\r\n                    >\r\n                      Date {sortField === 'startTime' && (\r\n                        <span className=\"sort-indicator\">\r\n                          {sortDirection === 'asc' ? '▲' : '▼'}\r\n                        </span>\r\n                      )}\r\n                    </th>\r\n                    <th \r\n                      className=\"sortable-header\"\r\n                      onClick={() => handleSort('answersCount')}\r\n                    >\r\n                      Answers {sortField === 'answersCount' && (\r\n                        <span className=\"sort-indicator\">\r\n                          {sortDirection === 'asc' ? '▲' : '▼'}\r\n                        </span>\r\n                      )}\r\n                    </th>\r\n                    <th>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {getSortedResponses().map(response => (\r\n                    <tr key={response.id}>\r\n                      <td className=\"id-cell\" title={response.id}>\r\n                        {response.id}\r\n                      </td>\r\n                      <td>{formatDate(response.startTime)}</td>\r\n                      <td className=\"answers-cell\">{response.answersCount}</td>\r\n                      <td>\r\n                        <button \r\n                          onClick={() => downloadResponse(response.id)}\r\n                          className=\"download-button\"\r\n                          title=\"Download response data\"\r\n                        >\r\n                          Download\r\n                        </button>\r\n                      </td>\r\n                    </tr>\r\n                  ))}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          )}\r\n        </section>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}