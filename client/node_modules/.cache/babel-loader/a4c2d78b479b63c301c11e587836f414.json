{"ast":null,"code":"var _jsxFileName = \"Z:\\\\Documents\\\\IBA\\\\webdev\\\\sporgeskema-system\\\\client\\\\src\\\\components\\\\WelcomeSurvey.js\";\n// client/src/components/WelcomeSurvey.js\nimport React, { useState } from 'react';\nimport axios from 'axios';\nfunction WelcomeSurvey({\n  sessionId,\n  onComplete,\n  demographicQuestions\n}) {\n  const [answers, setAnswers] = useState({});\n  const [errors, setErrors] = useState({});\n  const [isSubmitting, setIsSubmitting] = useState(false);\n  const handleChange = (questionId, value) => {\n    setAnswers(prev => ({\n      ...prev,\n      [questionId]: value\n    }));\n\n    // Ryd fejl for dette spørgsmål, hvis det findes\n    if (errors[questionId]) {\n      setErrors(prev => {\n        const newErrors = {\n          ...prev\n        };\n        delete newErrors[questionId];\n        return newErrors;\n      });\n    }\n  };\n  const validateForm = () => {\n    const newErrors = {};\n    let isValid = true;\n\n    // Tjek påkrævede felter\n    demographicQuestions.forEach(question => {\n      if (question.obligatorisk === 'true' && (!answers[question['@_id']] || answers[question['@_id']] === '')) {\n        newErrors[question['@_id']] = 'Dette felt er påkrævet';\n        isValid = false;\n      }\n    });\n    setErrors(newErrors);\n    return isValid;\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    setIsSubmitting(true);\n    try {\n      console.log('Indsender demografiske data for session:', sessionId);\n      console.log('Demografiske data:', answers);\n\n      // Send demografiske svar til serveren\n      const response = await axios.post(`/api/survey/demographics/${sessionId}`, {\n        answers\n      });\n      console.log('Svar på indsendelse af demografi:', response.data);\n      if (response.data.success) {\n        // Gå til første hjemmesidedesign\n        onComplete();\n      } else {\n        setErrors({\n          submit: 'Der opstod en fejl ved indsendelse. Prøv venligst igen.'\n        });\n      }\n    } catch (err) {\n      console.error('Fejl ved indsendelse af demografiske data:', err);\n      setErrors({\n        submit: 'Der opstod en fejl. Prøv venligst igen.'\n      });\n    } finally {\n      setIsSubmitting(false);\n    }\n  };\n  const renderQuestionInput = question => {\n    const type = question['@_type'];\n    switch (type) {\n      case 'text':\n        return /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          className: `text-input ${errors[question['@_id']] ? 'error-input' : ''}`,\n          onChange: e => handleChange(question['@_id'], e.target.value),\n          required: question.obligatorisk === 'true',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 11\n          }\n        });\n      case 'select':\n        if (!question.options || !question.options.option) {\n          return /*#__PURE__*/React.createElement(\"p\", {\n            className: \"error\",\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 18\n            }\n          }, \"Ingen muligheder tilg\\xE6ngelige\");\n        }\n        const options = Array.isArray(question.options.option) ? question.options.option : [question.options.option];\n        return /*#__PURE__*/React.createElement(\"select\", {\n          className: `select-input ${errors[question['@_id']] ? 'error-input' : ''}`,\n          onChange: e => handleChange(question['@_id'], e.target.value),\n          required: question.obligatorisk === 'true',\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"option\", {\n          value: \"\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, \"V\\xE6lg en mulighed\"), options.map((option, index) => /*#__PURE__*/React.createElement(\"option\", {\n          key: index,\n          value: option['@_value'] || option,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }\n        }, option['#text'] || option)));\n      default:\n        return /*#__PURE__*/React.createElement(\"p\", {\n          className: \"error\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 16\n          }\n        }, \"Ukendt sp\\xF8rgsm\\xE5lstype: \", type);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"welcome-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, \"Velkommen til hjemmesidedesign unders\\xF8gelsen\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Denne unders\\xF8gelse handler om at evaluere forskellige hjemmesidedesigns. Du vil blive pr\\xE6senteret for tre forskellige hjemmesider og bedt om at give din mening om hver af dem.\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"F\\xF8rst beder vi dig om at udfylde nogle f\\xE5 oplysninger om dig selv. Alle data behandles anonymt.\"), errors.submit && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-message\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 27\n    }\n  }, errors.submit), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"demographic-form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 9\n    }\n  }, demographicQuestions.map(question => /*#__PURE__*/React.createElement(\"div\", {\n    key: question['@_id'],\n    className: \"question demographic-question\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"question-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }, question.text, question.obligatorisk === 'true' && /*#__PURE__*/React.createElement(\"span\", {\n    className: \"required\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 54\n    }\n  }, \"*\")), renderQuestionInput(question), errors[question['@_id']] && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, errors[question['@_id']]))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"submit-button\",\n    disabled: isSubmitting,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  }, isSubmitting ? 'Behandler...' : 'Start undersøgelsen'))));\n}\nexport default WelcomeSurvey;","map":{"version":3,"names":["React","useState","axios","WelcomeSurvey","sessionId","onComplete","demographicQuestions","answers","setAnswers","errors","setErrors","isSubmitting","setIsSubmitting","handleChange","questionId","value","prev","newErrors","validateForm","isValid","forEach","question","obligatorisk","handleSubmit","e","preventDefault","console","log","response","post","data","success","submit","err","error","renderQuestionInput","type","createElement","className","onChange","target","required","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","options","option","Array","isArray","map","index","key","onSubmit","text","disabled"],"sources":["Z:/Documents/IBA/webdev/sporgeskema-system/client/src/components/WelcomeSurvey.js"],"sourcesContent":["// client/src/components/WelcomeSurvey.js\r\nimport React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction WelcomeSurvey({ sessionId, onComplete, demographicQuestions }) {\r\n  const [answers, setAnswers] = useState({});\r\n  const [errors, setErrors] = useState({});\r\n  const [isSubmitting, setIsSubmitting] = useState(false);\r\n  \r\n  const handleChange = (questionId, value) => {\r\n    setAnswers(prev => ({\r\n      ...prev,\r\n      [questionId]: value\r\n    }));\r\n    \r\n    // Ryd fejl for dette spørgsmål, hvis det findes\r\n    if (errors[questionId]) {\r\n      setErrors(prev => {\r\n        const newErrors = { ...prev };\r\n        delete newErrors[questionId];\r\n        return newErrors;\r\n      });\r\n    }\r\n  };\r\n  \r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n    let isValid = true;\r\n    \r\n    // Tjek påkrævede felter\r\n    demographicQuestions.forEach(question => {\r\n      if (question.obligatorisk === 'true' && (!answers[question['@_id']] || answers[question['@_id']] === '')) {\r\n        newErrors[question['@_id']] = 'Dette felt er påkrævet';\r\n        isValid = false;\r\n      }\r\n    });\r\n    \r\n    setErrors(newErrors);\r\n    return isValid;\r\n  };\r\n  \r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    \r\n    if (!validateForm()) {\r\n      return;\r\n    }\r\n    \r\n    setIsSubmitting(true);\r\n    \r\n    try {\r\n      console.log('Indsender demografiske data for session:', sessionId);\r\n      console.log('Demografiske data:', answers);\r\n      \r\n      // Send demografiske svar til serveren\r\n      const response = await axios.post(`/api/survey/demographics/${sessionId}`, {\r\n        answers\r\n      });\r\n      \r\n      console.log('Svar på indsendelse af demografi:', response.data);\r\n      \r\n      if (response.data.success) {\r\n        // Gå til første hjemmesidedesign\r\n        onComplete();\r\n      } else {\r\n        setErrors({ submit: 'Der opstod en fejl ved indsendelse. Prøv venligst igen.' });\r\n      }\r\n    } catch (err) {\r\n      console.error('Fejl ved indsendelse af demografiske data:', err);\r\n      setErrors({ submit: 'Der opstod en fejl. Prøv venligst igen.' });\r\n    } finally {\r\n      setIsSubmitting(false);\r\n    }\r\n  };\r\n  \r\n  const renderQuestionInput = (question) => {\r\n    const type = question['@_type'];\r\n    \r\n    switch (type) {\r\n      case 'text':\r\n        return (\r\n          <input\r\n            type=\"text\"\r\n            className={`text-input ${errors[question['@_id']] ? 'error-input' : ''}`}\r\n            onChange={(e) => handleChange(question['@_id'], e.target.value)}\r\n            required={question.obligatorisk === 'true'}\r\n          />\r\n        );\r\n      \r\n      case 'select':\r\n        if (!question.options || !question.options.option) {\r\n          return <p className=\"error\">Ingen muligheder tilgængelige</p>;\r\n        }\r\n        \r\n        const options = Array.isArray(question.options.option) \r\n          ? question.options.option \r\n          : [question.options.option];\r\n          \r\n        return (\r\n          <select \r\n            className={`select-input ${errors[question['@_id']] ? 'error-input' : ''}`}\r\n            onChange={(e) => handleChange(question['@_id'], e.target.value)}\r\n            required={question.obligatorisk === 'true'}\r\n          >\r\n            <option value=\"\">Vælg en mulighed</option>\r\n            {options.map((option, index) => (\r\n              <option key={index} value={option['@_value'] || option}>\r\n                {option['#text'] || option}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        );\r\n      \r\n      default:\r\n        return <p className=\"error\">Ukendt spørgsmålstype: {type}</p>;\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <div className=\"welcome-container\">\r\n      <div className=\"welcome-content\">\r\n        <h1>Velkommen til hjemmesidedesign undersøgelsen</h1>\r\n        <p>\r\n          Denne undersøgelse handler om at evaluere forskellige hjemmesidedesigns.\r\n          Du vil blive præsenteret for tre forskellige hjemmesider og bedt om at\r\n          give din mening om hver af dem.\r\n        </p>\r\n        <p>\r\n          Først beder vi dig om at udfylde nogle få oplysninger om dig selv.\r\n          Alle data behandles anonymt.\r\n        </p>\r\n        \r\n        {errors.submit && <div className=\"error-message\">{errors.submit}</div>}\r\n        \r\n        <form onSubmit={handleSubmit} className=\"demographic-form\">\r\n          {demographicQuestions.map(question => (\r\n            <div key={question['@_id']} className=\"question demographic-question\">\r\n              <label className=\"question-label\">\r\n                {question.text}\r\n                {question.obligatorisk === 'true' && <span className=\"required\">*</span>}\r\n              </label>\r\n              \r\n              {renderQuestionInput(question)}\r\n              \r\n              {errors[question['@_id']] && (\r\n                <div className=\"error-text\">{errors[question['@_id']]}</div>\r\n              )}\r\n            </div>\r\n          ))}\r\n          \r\n          <button \r\n            type=\"submit\" \r\n            className=\"submit-button\"\r\n            disabled={isSubmitting}\r\n          >\r\n            {isSubmitting ? 'Behandler...' : 'Start undersøgelsen'}\r\n          </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WelcomeSurvey;"],"mappings":";AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAEzB,SAASC,aAAaA,CAAC;EAAEC,SAAS;EAAEC,UAAU;EAAEC;AAAqB,CAAC,EAAE;EACtE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC,CAAC,CAAC;EAC1C,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC,CAAC;EACxC,MAAM,CAACU,YAAY,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMY,YAAY,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;IAC1CP,UAAU,CAACQ,IAAI,KAAK;MAClB,GAAGA,IAAI;MACP,CAACF,UAAU,GAAGC;IAChB,CAAC,CAAC,CAAC;;IAEH;IACA,IAAIN,MAAM,CAACK,UAAU,CAAC,EAAE;MACtBJ,SAAS,CAACM,IAAI,IAAI;QAChB,MAAMC,SAAS,GAAG;UAAE,GAAGD;QAAK,CAAC;QAC7B,OAAOC,SAAS,CAACH,UAAU,CAAC;QAC5B,OAAOG,SAAS;MAClB,CAAC,CAAC;IACJ;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,MAAMD,SAAS,GAAG,CAAC,CAAC;IACpB,IAAIE,OAAO,GAAG,IAAI;;IAElB;IACAb,oBAAoB,CAACc,OAAO,CAACC,QAAQ,IAAI;MACvC,IAAIA,QAAQ,CAACC,YAAY,KAAK,MAAM,KAAK,CAACf,OAAO,CAACc,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAId,OAAO,CAACc,QAAQ,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC,EAAE;QACxGJ,SAAS,CAACI,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,wBAAwB;QACtDF,OAAO,GAAG,KAAK;MACjB;IACF,CAAC,CAAC;IAEFT,SAAS,CAACO,SAAS,CAAC;IACpB,OAAOE,OAAO;EAChB,CAAC;EAED,MAAMI,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAACP,YAAY,CAAC,CAAC,EAAE;MACnB;IACF;IAEAN,eAAe,CAAC,IAAI,CAAC;IAErB,IAAI;MACFc,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAEvB,SAAS,CAAC;MAClEsB,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEpB,OAAO,CAAC;;MAE1C;MACA,MAAMqB,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,IAAI,CAAC,4BAA4BzB,SAAS,EAAE,EAAE;QACzEG;MACF,CAAC,CAAC;MAEFmB,OAAO,CAACC,GAAG,CAAC,mCAAmC,EAAEC,QAAQ,CAACE,IAAI,CAAC;MAE/D,IAAIF,QAAQ,CAACE,IAAI,CAACC,OAAO,EAAE;QACzB;QACA1B,UAAU,CAAC,CAAC;MACd,CAAC,MAAM;QACLK,SAAS,CAAC;UAAEsB,MAAM,EAAE;QAA0D,CAAC,CAAC;MAClF;IACF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZP,OAAO,CAACQ,KAAK,CAAC,4CAA4C,EAAED,GAAG,CAAC;MAChEvB,SAAS,CAAC;QAAEsB,MAAM,EAAE;MAA0C,CAAC,CAAC;IAClE,CAAC,SAAS;MACRpB,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMuB,mBAAmB,GAAId,QAAQ,IAAK;IACxC,MAAMe,IAAI,GAAGf,QAAQ,CAAC,QAAQ,CAAC;IAE/B,QAAQe,IAAI;MACV,KAAK,MAAM;QACT,oBACEpC,KAAA,CAAAqC,aAAA;UACED,IAAI,EAAC,MAAM;UACXE,SAAS,EAAE,cAAc7B,MAAM,CAACY,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,aAAa,GAAG,EAAE,EAAG;UACzEkB,QAAQ,EAAGf,CAAC,IAAKX,YAAY,CAACQ,QAAQ,CAAC,MAAM,CAAC,EAAEG,CAAC,CAACgB,MAAM,CAACzB,KAAK,CAAE;UAChE0B,QAAQ,EAAEpB,QAAQ,CAACC,YAAY,KAAK,MAAO;UAAAoB,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,CAC5C,CAAC;MAGN,KAAK,QAAQ;QACX,IAAI,CAAC1B,QAAQ,CAAC2B,OAAO,IAAI,CAAC3B,QAAQ,CAAC2B,OAAO,CAACC,MAAM,EAAE;UACjD,oBAAOjD,KAAA,CAAAqC,aAAA;YAAGC,SAAS,EAAC,OAAO;YAAAI,MAAA;YAAAC,QAAA;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAA,GAAC,kCAAgC,CAAC;QAC/D;QAEA,MAAMC,OAAO,GAAGE,KAAK,CAACC,OAAO,CAAC9B,QAAQ,CAAC2B,OAAO,CAACC,MAAM,CAAC,GAClD5B,QAAQ,CAAC2B,OAAO,CAACC,MAAM,GACvB,CAAC5B,QAAQ,CAAC2B,OAAO,CAACC,MAAM,CAAC;QAE7B,oBACEjD,KAAA,CAAAqC,aAAA;UACEC,SAAS,EAAE,gBAAgB7B,MAAM,CAACY,QAAQ,CAAC,MAAM,CAAC,CAAC,GAAG,aAAa,GAAG,EAAE,EAAG;UAC3EkB,QAAQ,EAAGf,CAAC,IAAKX,YAAY,CAACQ,QAAQ,CAAC,MAAM,CAAC,EAAEG,CAAC,CAACgB,MAAM,CAACzB,KAAK,CAAE;UAChE0B,QAAQ,EAAEpB,QAAQ,CAACC,YAAY,KAAK,MAAO;UAAAoB,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,gBAE3C/C,KAAA,CAAAqC,aAAA;UAAQtB,KAAK,EAAC,EAAE;UAAA2B,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAC,qBAAwB,CAAC,EACzCC,OAAO,CAACI,GAAG,CAAC,CAACH,MAAM,EAAEI,KAAK,kBACzBrD,KAAA,CAAAqC,aAAA;UAAQiB,GAAG,EAAED,KAAM;UAACtC,KAAK,EAAEkC,MAAM,CAAC,SAAS,CAAC,IAAIA,MAAO;UAAAP,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GACpDE,MAAM,CAAC,OAAO,CAAC,IAAIA,MACd,CACT,CACK,CAAC;MAGb;QACE,oBAAOjD,KAAA,CAAAqC,aAAA;UAAGC,SAAS,EAAC,OAAO;UAAAI,MAAA;UAAAC,QAAA;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA;QAAA,GAAC,+BAAuB,EAACX,IAAQ,CAAC;IACjE;EACF,CAAC;EAED,oBACEpC,KAAA,CAAAqC,aAAA;IAAKC,SAAS,EAAC,mBAAmB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAChC/C,KAAA,CAAAqC,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAC9B/C,KAAA,CAAAqC,aAAA;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAI,iDAAgD,CAAC,eACrD/C,KAAA,CAAAqC,aAAA;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uLAIA,CAAC,eACJ/C,KAAA,CAAAqC,aAAA;IAAAK,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,uGAGA,CAAC,EAEHtC,MAAM,CAACuB,MAAM,iBAAIhC,KAAA,CAAAqC,aAAA;IAAKC,SAAS,EAAC,eAAe;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEtC,MAAM,CAACuB,MAAY,CAAC,eAEtEhC,KAAA,CAAAqC,aAAA;IAAMkB,QAAQ,EAAEhC,YAAa;IAACe,SAAS,EAAC,kBAAkB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GACvDzC,oBAAoB,CAAC8C,GAAG,CAAC/B,QAAQ,iBAChCrB,KAAA,CAAAqC,aAAA;IAAKiB,GAAG,EAAEjC,QAAQ,CAAC,MAAM,CAAE;IAACiB,SAAS,EAAC,+BAA+B;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACnE/C,KAAA,CAAAqC,aAAA;IAAOC,SAAS,EAAC,gBAAgB;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAC9B1B,QAAQ,CAACmC,IAAI,EACbnC,QAAQ,CAACC,YAAY,KAAK,MAAM,iBAAItB,KAAA,CAAAqC,aAAA;IAAMC,SAAS,EAAC,UAAU;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAC,GAAO,CAClE,CAAC,EAEPZ,mBAAmB,CAACd,QAAQ,CAAC,EAE7BZ,MAAM,CAACY,QAAQ,CAAC,MAAM,CAAC,CAAC,iBACvBrB,KAAA,CAAAqC,aAAA;IAAKC,SAAS,EAAC,YAAY;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAEtC,MAAM,CAACY,QAAQ,CAAC,MAAM,CAAC,CAAO,CAE1D,CACN,CAAC,eAEFrB,KAAA,CAAAqC,aAAA;IACED,IAAI,EAAC,QAAQ;IACbE,SAAS,EAAC,eAAe;IACzBmB,QAAQ,EAAE9C,YAAa;IAAA+B,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAEtBpC,YAAY,GAAG,cAAc,GAAG,qBAC3B,CACJ,CACH,CACF,CAAC;AAEV;AAEA,eAAeR,aAAa","ignoreList":[]},"metadata":{},"sourceType":"module"}